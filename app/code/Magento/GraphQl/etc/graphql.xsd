<?xml version="1.0" encoding="UTF-8"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:element name="config" type="configType">
        <xs:annotation>
            <xs:documentation>Copyright Â© Magento, Inc. All rights reserved.
                See COPYING.txt for license details.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:complexType name="itemType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="name" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="configType" mixed="true">
        <xs:sequence>
            <xs:element type="abstractType" name="type" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="implementsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="interface" use="required"/>
                <xs:attribute type="xs:string" name="copyFields" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="abstractType" abstract="true">
        <xs:attribute type="xs:string" name="description" use="optional"/>
    </xs:complexType>

    <xs:complexType name="Enum">
        <xs:complexContent>
            <xs:extension base="abstractType">
                <xs:sequence>
                    <xs:element type="EnumItem" name="item" maxOccurs="unbounded" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute type="xs:string" name="name" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="EnumItem">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="name" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="InputType">
        <xs:complexContent>
            <xs:extension base="abstractType">
                <xs:choice maxOccurs="unbounded" minOccurs="0">
                    <xs:element type="AbstractField" name="field"/>
                </xs:choice>
                <xs:attribute name="name" type="InputTypeNameType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="InputTypeNameType">
        <xs:restriction base="xs:string">
            <xs:pattern value=".*Input"><xs:annotation><xs:documentation>All input types must have "Input" suffix</xs:documentation></xs:annotation></xs:pattern>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="OutputType">
        <xs:complexContent>
            <xs:extension base="abstractType">
                <xs:choice maxOccurs="unbounded" minOccurs="0">
                    <xs:element type="AbstractField" name="field"/>
                    <xs:element type="implementsType" name="implements"/>
                </xs:choice>
                <xs:attribute type="xs:string" name="name" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="OutputInterface">
        <xs:complexContent>
            <xs:extension base="abstractType">
                <xs:choice maxOccurs="unbounded" minOccurs="0">
                    <xs:element type="AbstractField" name="field"/>
                </xs:choice>
                <xs:attribute type="xs:string" name="name" use="required"/>
                <xs:attribute type="xs:string" name="typeResolver" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="AbstractField" abstract="true">
        <xs:attribute type="xs:string" name="name" use="optional"/>
        <xs:attribute name="resolver" type="xs:string" use="optional"/>
        <xs:attribute name="required" type="xs:boolean" use="optional" default="false"/>
        <xs:attribute type="xs:string" name="description" use="optional"/>
    </xs:complexType>

    <xs:complexType name="AbstractInputField" abstract="true">
        <xs:complexContent>
            <xs:extension base="AbstractField" />
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="AbstractOutputField" abstract="true">
        <xs:complexContent>
            <xs:extension base="AbstractField">
                <xs:sequence>
                    <xs:element type="AbstractArgument" name="argument" maxOccurs="unbounded" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ScalarOutputField">
        <xs:complexContent>
            <xs:extension base="AbstractOutputField">
                <xs:attribute type="GraphQlScalarTypesEnum" name="type" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ScalarInputField">
        <xs:complexContent>
            <xs:extension base="AbstractInputField">
                <xs:attribute type="GraphQlScalarTypesEnum" name="type" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ObjectOutputField">
        <xs:complexContent>
            <xs:extension base="AbstractOutputField">
                <xs:attribute type="xs:string" name="type" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ObjectInputField">
        <xs:complexContent>
            <xs:extension base="AbstractInputField">
                <xs:attribute type="xs:string" name="type" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ScalarArrayOutputField">
        <xs:complexContent>
            <xs:extension base="AbstractOutputField">
                <xs:attribute name="itemType" type="GraphQlScalarTypesEnum" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ScalarArrayInputField">
        <xs:complexContent>
            <xs:extension base="AbstractInputField">
                <xs:attribute name="itemType" type="GraphQlScalarTypesEnum" use="required"/>
                <xs:attribute name="itemsRequired" type="xs:boolean" use="optional" default="false"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ObjectArrayOutputField">
        <xs:complexContent>
            <xs:extension base="AbstractOutputField">
                <xs:attribute name="itemType" type="xs:string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ObjectArrayInputField">
        <xs:complexContent>
            <xs:extension base="AbstractInputField">
                <xs:attribute name="itemType" type="xs:string" use="required"/>
                <xs:attribute name="itemsRequired" type="xs:boolean" use="optional" default="false"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="AbstractArgument" abstract="true">
        <xs:attribute type="xs:string" name="name" use="required"/>
        <xs:attribute name="required" type="xs:boolean" use="optional" default="false"/>
        <xs:attribute type="xs:string" name="description" use="optional"/>
    </xs:complexType>

    <xs:complexType name="ScalarArgument">
        <xs:complexContent>
            <xs:extension base="AbstractArgument">
                <xs:attribute type="GraphQlScalarTypesEnum" name="type" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ObjectArgument">
        <xs:complexContent>
            <xs:extension base="AbstractArgument">
                <xs:attribute type="xs:string" name="type" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ScalarArrayArgument">
        <xs:complexContent>
            <xs:extension base="AbstractArgument">
                <xs:attribute name="itemType" type="GraphQlScalarTypesEnum" use="required"/>
                <xs:attribute name="itemsRequired" type="xs:boolean" use="optional" default="false"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ObjectArrayArgument">
        <xs:complexContent>
            <xs:extension base="AbstractArgument">
                <xs:attribute name="itemType" type="xs:string" use="required"/>
                <xs:attribute name="itemsRequired" type="xs:boolean" use="optional" default="false"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SortArgument">
        <xs:complexContent>
            <xs:extension base="AbstractArgument">
                <xs:attribute name="baseType" type="xs:string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="FilterArgument">
        <xs:complexContent>
            <xs:extension base="AbstractArgument">
                <xs:attribute type="xs:string" name="baseType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="arrayItemType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="type"/>
                <xs:attribute type="xs:string" name="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:simpleType name="GraphQlScalarTypesEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Int"/>
            <xs:enumeration value="String"/>
            <xs:enumeration value="Boolean"/>
            <xs:enumeration value="Float"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
