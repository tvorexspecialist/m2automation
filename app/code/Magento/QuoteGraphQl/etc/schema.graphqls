# Copyright Â© Magento, Inc. All rights reserved.
# See COPYING.txt for license details.

type Mutation {
    createEmptyCart: String @resolver(class: "\\Magento\\QuoteGraphQl\\Model\\Resolver\\Cart\\CreateEmptyCart") @doc(description:"Creates empty shopping cart for guest or logged in user")
    applyCouponToCart(input: ApplyCouponToCartInput): ApplyCouponToCartOutput @resolver(class: "\\Magento\\QuoteGraphQl\\Model\\Resolver\\Coupon\\ApplyCouponToCart")
    removeCouponFromCart(input: RemoveCouponFromCartInput): RemoveCouponFromCartOutput @resolver(class: "\\Magento\\QuoteGraphQl\\Model\\Resolver\\Coupon\\RemoveCouponFromCart")
    addSimpleProductsToCart(input: AddSimpleProductsToCartInput): AddSimpleProductsToCartOutput @resolver(class: "Magento\\QuoteGraphQl\\Model\\Resolver\\Cart\\AddSimpleProductsToCart")
}

input ApplyCouponToCartInput {
    cart_id: String!
    coupon_code: String!
}

type ApplyCouponToCartOutput {
    cart: Cart!
}

type Cart {
    applied_coupon: AppliedCoupon
}

type CartAddress {
    applied_coupon: AppliedCoupon
}

type AppliedCoupon {
    code: String!
}

input RemoveCouponFromCartInput {
    cart_id: String!
}

type RemoveCouponFromCartOutput {
    cart: Cart
}

input AddSimpleProductsToCartInput {
    cart_id: String!
    cartItems: [SimpleProductCartItemInput!]!
}

input SimpleProductCartItemInput {
    details: CartItemDetailsInput!
    customizable_options:[CustomizableOptionInput!]
}

input CustomizableOptionInput {
    id: Int!
    value: String!
}

type AddSimpleProductsToCartOutput {
    cart: Cart!
}

type SimpleCartItem implements CartItemInterface @doc(description: "Simple Cart Item") {
    customizable_options: [SelectedCustomizableOption] @resolver(class: "Magento\\QuoteGraphQl\\Model\\Resolver\\CartItem\\CustomizableOptions")
}

input CartItemDetailsInput {
    sku: String!
    qty: Float!
}

interface CartItemInterface @typeResolver(class: "Magento\\QuoteGraphQl\\Model\\Resolver\\CartItemTypeResolverComposite") {
    id: String!
    qty: Float!
    product: ProductInterface!
}

type SelectedCustomizableOption {
    id: Int!
    label: String!
    type: String!
    values: [SelectedCustomizableOptionValue!]!
    sort_order: Int!
}

type SelectedCustomizableOptionValue {
    id: Int
    label: String!
    price: CartItemSelectedOptionValuePrice!
    sort_order: Int!
}

type CartItemSelectedOptionValuePrice {
    value: Float!
    units: String!
    type: PriceTypeEnum!
}
