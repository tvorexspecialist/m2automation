<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <cest name="End2EndB2CUserCest">
        <annotations>
            <features value="End to End scenarios"/>
            <stories value="B2C - User"/>
            <group value="end2end"/>
            <env value="chrome"/>
            <env value="firefox"/>
            <env value="phantomjs"/>
        </annotations>
        <before>
            <resetCookie userInput="PHPSESSID" stepKey="resetCookieForCart"/>
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <createData entity="ApiSimpleProduct" stepKey="createSimpleProduct1">
                <required-entity createDataKey="createCategory"/>
            </createData>
            <createData entity="ApiProductAttributeMediaGalleryEntryTestImage" stepKey="createProductImage11">
                <required-entity createDataKey="createSimpleProduct1"/>
            </createData>
            <createData entity="ApiProductAttributeMediaGalleryEntryMagentoLogo" stepKey="createProductImage12">
                <required-entity createDataKey="createSimpleProduct1"/>
            </createData>
            <createData entity="ApiSimpleProduct" stepKey="createSimpleProduct2">
                <required-entity createDataKey="createCategory"/>
            </createData>
            <createData entity="ApiProductAttributeMediaGalleryEntryMagentoLogo" stepKey="createProductImage2">
                <required-entity createDataKey="createSimpleProduct2"/>
            </createData>
            <!-- @TODO: MAGETWO-75411 Add Configurable Product -->
            <createData entity="ApiCategory" stepKey="createCategory1"/>
            <createData entity="ApiSimpleProduct" stepKey="createSimpleProduct11">
                <required-entity createDataKey="createCategory1"/>
            </createData>
            <!-- @TODO: MAGETWO-75411 Move to SalesRule -->
            <createData entity="ApiSalesRule" stepKey="createSalesRule"/>
            <createData entity="ApiSalesRuleCoupon" stepKey="createSalesRuleCoupon">
                <required-entity createDataKey="createSalesRule"/>
            </createData>
        </before>
        <after>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createCategory1" stepKey="deleteCategory1"/>
            <!-- @TODO: Uncomment once MQE-679 is fixed -->
            <!--<deleteData createDataKey="createProductImage11" stepKey="deleteProductImage11"/>-->
            <!-- @TODO: Uncomment once MQE-679 is fixed -->
            <!--<deleteData createDataKey="createProductImage12" stepKey="deleteProductImage12"/>-->
            <deleteData createDataKey="createSimpleProduct1" stepKey="deleteSimpleProduct1"/>
            <!-- @TODO: Uncomment once MQE-679 is fixed -->
            <!--<deleteData createDataKey="createProductImage2" stepKey="deleteProductImage2"/>-->
            <deleteData createDataKey="createSimpleProduct2" stepKey="deleteSimpleProduct2"/>
            <deleteData createDataKey="createSimpleProduct11" stepKey="deleteSimpleProduct11"/>
            <!-- @TODO: MAGETWO-75411 Add Configurable Product -->
            <!-- @TODO: MAGETWO-75411 Move to SalesRule -->
            <deleteData createDataKey="createSalesRule" stepKey="deleteSalesRule"/>
        </after>
        <test name="End2EndB2CUser">
            <annotations>
                <title value="You should be able to pass End to End B2C User scenario"/>
                <description value="User browses catalog, searches for product, adds product to cart, adds product to wishlist, compares products, uses coupon code and checks out."/>
                <severity value="CRITICAL"/>
                <testCaseId value="MAGETWO-75411"/>
            </annotations>

            <!-- Step 1: User browses catalog -->
            <amOnPage url="{{StorefrontHomePage}}" stepKey="amOnHomePage"/>
            <waitForPageLoad stepKey="homeWaitForPageLoad"/>
            <waitForElementVisible selector="{{StorefrontPanelHeaderSection.WelcomeMessage}}" stepKey="homeWaitForWelcomeMessage"/>
            <see userInput="Default welcome msg!" selector="{{StorefrontPanelHeaderSection.WelcomeMessage}}" stepKey="homeCheckWelcome"/>

            <!-- Open Category -->
            <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($$createCategory.name$$)}}" stepKey="clickCategory"/>
            <actionGroup ref="StorefrontCheckCategoryActionGroup" stepKey="browseAssertCategory">
                <argument name="category" value="$$createCategory$$"/>
                <argument name="productCount" value="CONST.two"/>
            </actionGroup>
            <actionGroup ref="StorefrontCheckCategorySimpleProduct" stepKey="browseAssertCategoryProduct1">
                <argument name="product" value="$$createSimpleProduct1$$"/>
            </actionGroup>
            <actionGroup ref="StorefrontCheckCategorySimpleProduct" stepKey="browseAssertCategoryProduct2">
                <argument name="product" value="$$createSimpleProduct2$$"/>
            </actionGroup>

            <!-- View Simple Product 1 -->
            <click selector="{{StorefrontCategoryProductSection.ProductTitleByName($$createSimpleProduct1.name$$)}}" stepKey="browseClickCategorySimpleProduct1View"/>
            <actionGroup ref="StorefrontCheckSimpleProduct" stepKey="browseAssertProduct1Page">
                <argument name="product" value="$$createSimpleProduct1$$"/>
            </actionGroup>

            <!-- View Simple Product 2 -->
            <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($$createCategory.name$$)}}" stepKey="clickCategory1"/>
            <click selector="{{StorefrontCategoryProductSection.ProductTitleByName($$createSimpleProduct2.name$$)}}" stepKey="browseClickCategorySimpleProduct2View"/>
            <actionGroup ref="StorefrontCheckSimpleProduct" stepKey="browseAssertProduct2Page">
                <argument name="product" value="$$createSimpleProduct2$$"/>
            </actionGroup>

            <!-- @TODO: MAGETWO-75411 Add Configurable Product -->

            <!-- @TODO: MAGETWO-75411 Move to CatalogSearch -->
            <!-- Step 2: User searches for product -->
            <!-- Quick Search with Product 1 Name -->
            <actionGroup ref="StorefrontCheckQuickSearchActionGroup" stepKey="searchQuickSearchProduct1">
                <argument name="phrase" value="$$createSimpleProduct1.name$$"/>
            </actionGroup>
            <see userInput="1" selector="{{StorefrontQuickSearchMainSection.productCount}} span" stepKey="searchAssertProduct1Count"/>

            <actionGroup ref="StorefrontCheckCategorySimpleProduct" stepKey="searchAssertSimpleProduct1">
                <argument name="product" value="$$createSimpleProduct1$$"/>
            </actionGroup>
            <click selector="{{StorefrontCategoryProductSection.ProductTitleByName($$createSimpleProduct1.name$$)}}" stepKey="searchClickSimpleProduct1View"/>
            <actionGroup ref="StorefrontCheckSimpleProduct" stepKey="searchAssertSimpleProduct1Page">
                <argument name="product" value="$$createSimpleProduct1$$"/>
            </actionGroup>

            <!-- Quick Search with common part of product names -->
            <actionGroup ref="StorefrontCheckQuickSearchActionGroup" stepKey="searchQuickSearchCommonPart">
                <argument name="phrase" value="CONST.apiSimpleProduct"/>
            </actionGroup>
            <actionGroup ref="StorefrontSelectFilterCategoryActionGroup" stepKey="searchSelectFilterCategoryCommonPart">
                <argument name="category" value="$$createCategory$$"/>
            </actionGroup>
            <see userInput="2" selector="{{StorefrontCategoryMainSection.productCount}} span" stepKey="searchAssertFilterCategoryProductCountCommonPart"/>

            <actionGroup ref="StorefrontCheckCategorySimpleProduct" stepKey="searchAssertFilterCategorySimpleProduct1">
                <argument name="product" value="$$createSimpleProduct1$$"/>
            </actionGroup>
            <actionGroup ref="StorefrontCheckCategorySimpleProduct" stepKey="searchAssertFilterCategorySimpleProduct2">
                <argument name="product" value="$$createSimpleProduct1$$"/>
            </actionGroup>

            <click selector="{{StorefrontCategoryProductSection.ProductTitleByName($$createSimpleProduct2.name$$)}}" stepKey="searchClickSimpleProduct2View"/>
            <actionGroup ref="StorefrontCheckSimpleProduct" stepKey="searchAssertSimpleProduct2Page">
                <argument name="product" value="$$createSimpleProduct2$$"/>
            </actionGroup>

            <!-- Quick Search with non-existent product name -->
            <actionGroup ref="StorefrontCheckQuickSearchActionGroup" stepKey="searchFillQuickSearchNonExistent">
                <argument name="phrase" value="CONST.nonexistentProductName"/>
            </actionGroup>
            <see userInput="Your search returned no results." selector="{{StorefrontQuickSearchMainSection.message}}" stepKey="searchAssertQuickSearchMessageNonExistent"/>

            <!-- @TODO: MAGETWO-75411 Add Configurable Product -->

            <!-- @TODO: MAGETWO-75411 Move to Checkout -->
            <!-- Step 3: User adds products to cart -->
            <!-- Add Simple Product 1 to cart -->
            <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($$createCategory.name$$)}}" stepKey="cartClickCategory"/>
            <actionGroup ref="StorefrontCheckCategoryActionGroup" stepKey="cartAssertCategory">
                <argument name="category" value="$$createCategory$$"/>
                <argument name="productCount" value="CONST.two"/>
            </actionGroup>
            <actionGroup ref="StorefrontCheckCategorySimpleProduct" stepKey="cartAssertSimpleProduct1">
                <argument name="product" value="$$createSimpleProduct1$$"/>
            </actionGroup>
            <click selector="{{StorefrontCategoryProductSection.ProductTitleByName($$createSimpleProduct1.name$$)}}" stepKey="cartClickSimpleProduct1"/>
            <actionGroup ref="StorefrontCheckSimpleProduct" stepKey="cartAssertProduct1Page">
                <argument name="product" value="$$createSimpleProduct1$$"/>
            </actionGroup>
            <actionGroup ref="StorefrontAddProductToCartActionGroup" stepKey="cartAddProduct1ToCart">
                <argument name="product" value="$$createSimpleProduct1$$"/>
                <argument name="productCount" value="CONST.one"/>
            </actionGroup>

            <!-- Add Simple Product 2 to cart -->
            <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($$createCategory.name$$)}}" stepKey="cartClickCategory1"/>
            <actionGroup ref="StorefrontCheckCategoryActionGroup" stepKey="cartAssertCategory1">
                <argument name="category" value="$$createCategory$$"/>
                <argument name="productCount" value="CONST.two"/>
            </actionGroup>
            <actionGroup ref="StorefrontCheckCategorySimpleProduct" stepKey="cartAssertSimpleProduct2">
                <argument name="product" value="$$createSimpleProduct2$$"/>
            </actionGroup>
            <actionGroup ref="StorefrontAddCategoryProductToCartActionGroup" stepKey="cartAddProduct2ToCart">
                <argument name="product" value="$$createSimpleProduct2$$"/>
                <argument name="productCount" value="CONST.two"/>
            </actionGroup>

            <!-- @TODO: MAGETWO-75411 Add Configurable Product -->

            <!-- Check products in minicart -->
            <actionGroup ref="StorefrontOpenMinicartProductActionGroup" stepKey="cartOpenMinicartProduct1Page">
                <argument name="product" value="$$createSimpleProduct1$$"/>
            </actionGroup>
            <actionGroup ref="StorefrontCheckSimpleProduct" stepKey="cartAssertMinicartProduct1Page">
                <argument name="product" value="$$createSimpleProduct1$$"/>
            </actionGroup>
            <actionGroup ref="StorefrontOpenMinicartProductActionGroup" stepKey="cartOpenMinicartProduct2Page">
                <argument name="product" value="$$createSimpleProduct2$$"/>
            </actionGroup>
            <actionGroup ref="StorefrontCheckSimpleProduct" stepKey="cartAssertMinicartProduct2Page">
                <argument name="product" value="$$createSimpleProduct2$$"/>
            </actionGroup>
            <!-- @TODO: MAGETWO-75411 Add Configurable Product -->

            <!-- Check products in cart -->
            <actionGroup ref="StorefrontOpenCartFromMinicartActionGroup" stepKey="cartOpenCart"/>
            <actionGroup ref="StorefrontCheckCartActionGroup" stepKey="cartAssertCart">
                <argument name="subtotal" value="CONST.twohundredfourtysix00"/>
                <argument name="shipping" value="CONST.ten00"/>
                <argument name="shippingMethod" value="CONST.flatRateFixed"/>
                <argument name="total" value="CONST.twohundredfiftysix00"/>
            </actionGroup>

            <actionGroup ref="StorefrontCheckCartProductActionGroup" stepKey="cartAssertCartSimpleProduct1">
                <argument name="product" value="$$createSimpleProduct1$$"/>
                <argument name="productQuantity" value="CONST.one"/>
            </actionGroup>
            <click selector="{{CheckoutCartProductSection.ProductLinkByName($$createSimpleProduct1.name$$)}}" stepKey="cartClickCartSimpleProduct1" />
            <actionGroup ref="StorefrontCheckSimpleProduct" stepKey="cartAssertCartProduct1Page">
                <argument name="product" value="$$createSimpleProduct1$$"/>
            </actionGroup>

            <actionGroup ref="StorefrontOpenCartFromMinicartActionGroup" stepKey="cartOpenCart1"/>
            <actionGroup ref="StorefrontCheckCartProductActionGroup" stepKey="cartAssertCartSimpleProduct2">
                <argument name="product" value="$$createSimpleProduct2$$"/>
                <argument name="productQuantity" value="CONST.one"/>
            </actionGroup>
            <click selector="{{CheckoutCartProductSection.ProductLinkByName($$createSimpleProduct2.name$$)}}" stepKey="cartClickCartSimpleProduct2" />
            <actionGroup ref="StorefrontCheckSimpleProduct" stepKey="cartAssertCartProduct2Page">
                <argument name="product" value="$$createSimpleProduct2$$"/>
            </actionGroup>

            <!-- @TODO: MAGETWO-75411 Add Configurable Product -->

            <!-- Step 4: User compares products -->
            <!-- Add Simple Product 1 to comparison -->
            <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($$createCategory.name$$)}}" stepKey="compareClickCategory"/>
            <actionGroup ref="StorefrontCheckCategoryActionGroup" stepKey="compareAssertCategory">
                <argument name="category" value="$$createCategory$$"/>
                <argument name="productCount" value="CONST.two"/>
            </actionGroup>
            <actionGroup ref="StorefrontCheckCategorySimpleProduct" stepKey="compareAssertSimpleProduct1">
                <argument name="product" value="$$createSimpleProduct1$$"/>
            </actionGroup>
            <click selector="{{StorefrontCategoryProductSection.ProductTitleByName($$createSimpleProduct1.name$$)}}" stepKey="compareClickSimpleProduct1"/>
            <actionGroup ref="StorefrontCheckSimpleProduct" stepKey="compareAssertProduct1Page">
                <argument name="product" value="$$createSimpleProduct1$$"/>
            </actionGroup>
            <actionGroup ref="StorefrontAddProductToCompareActionGroup" stepKey="compareAddSimpleProduct1ToCompare">
                <argument name="product" value="$$createSimpleProduct1$$"/>
                <argument name="productCount" value="CONST.one"/>
            </actionGroup>

            <!-- Add Simple Product 2 to comparison -->
            <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($$createCategory.name$$)}}" stepKey="compareClickCategory1"/>
            <actionGroup ref="StorefrontCheckCategoryActionGroup" stepKey="compareAssertCategory1">
                <argument name="category" value="$$createCategory$$"/>
                <argument name="productCount" value="CONST.two"/>
            </actionGroup>
            <actionGroup ref="StorefrontCheckCategorySimpleProduct" stepKey="compareAssertSimpleProduct2">
                <argument name="product" value="$$createSimpleProduct2$$"/>
            </actionGroup>
            <actionGroup ref="StorefrontAddCategoryProductToCompareActionGroup" stepKey="compareAddSimpleProduct2ToCompare">
                <argument name="product" value="$$createSimpleProduct2$$"/>
            </actionGroup>

            <!-- @TODO: MAGETWO-75411 Add Configurable Product -->

            <!-- Check products in comparison sidebar -->
            <actionGroup ref="StorefrontCheckCompareSidebarProductActionGroup" stepKey="compareSimpleProduct1InSidebar">
                <argument name="product" value="$$createSimpleProduct1$$"/>
            </actionGroup>
            <actionGroup ref="StorefrontCheckCompareSidebarProductActionGroup" stepKey="compareSimpleProduct2InSidebar">
                <argument name="product" value="$$createSimpleProduct2$$"/>
            </actionGroup>
            <!-- @TODO: MAGETWO-75411 Add Configurable Product -->

            <!-- Check products on comparison page -->
            <actionGroup ref="StorefrontOpenAndCheckComparisionActionGroup" stepKey="compareOpenComparePage"/>
            <actionGroup ref="StorefrontCheckCompareProductActionGroup" stepKey="compareAssertSimpleProduct1InComparison">
                <argument name="product" value="$$createSimpleProduct1$$"/>
            </actionGroup>
            <actionGroup ref="StorefrontCheckCompareProductActionGroup" stepKey="compareAssertSimpleProduct2InComparison">
                <argument name="product" value="$$createSimpleProduct2$$"/>
            </actionGroup>
            <!-- @TODO: MAGETWO-75411 Add Configurable Product -->

            <!-- Clear comparison sidebar -->
            <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($$createCategory.name$$)}}" stepKey="compareClickCategoryBeforeClear"/>
            <actionGroup ref="StorefrontCheckCategoryActionGroup" stepKey="compareAssertCategory2">
                <argument name="category" value="$$createCategory$$"/>
                <argument name="productCount" value="CONST.two"/>
            </actionGroup>
            <actionGroup ref="StorefrontClearCompareActionGroup" stepKey="compareClearCompare"/>

            <!-- @TODO: MAGETWO-75411 Move to SalesRule -->
            <!-- Step 5: User uses coupon codes -->
            <actionGroup ref="StorefrontOpenCartFromMinicartActionGroup" stepKey="couponOpenCart"/>

            <actionGroup ref="StorefrontApplyCouponActionGroup" stepKey="couponApplyCoupon">
                <argument name="coupon" value="$$createSalesRuleCoupon$$"/>
            </actionGroup>

            <actionGroup ref="StorefrontCheckCouponAppliedActionGroup" stepKey="couponCheckAppliedDiscount">
                <argument name="rule" value="$$createSalesRule$$"/>
                <argument name="discount" value="CONST.twentyfour60"/>
            </actionGroup>
            <actionGroup ref="StorefrontCheckCartActionGroup" stepKey="couponCheckCartWithDiscount">
                <argument name="subtotal" value="CONST.twohundredfourtysix00"/>
                <argument name="shipping" value="CONST.ten00"/>
                <argument name="shippingMethod" value="CONST.flatRateFixed"/>
                <argument name="total" value="CONST.twohundredthirtyone40"/>
            </actionGroup>

            <actionGroup ref="StorefrontCancelCouponActionGroup" stepKey="couponCancelCoupon"/>
            <actionGroup ref="StorefrontCheckCartActionGroup" stepKey="cartAssertCart">
                <argument name="subtotal" value="CONST.twohundredfourtysix00"/>
                <argument name="shipping" value="CONST.ten00"/>
                <argument name="shippingMethod" value="CONST.flatRateFixed"/>
                <argument name="total" value="CONST.twohundredfiftysix00"/>
            </actionGroup>
        </test>
    </cest>
</config>
