<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="EndToEndB2CAdminTest">
        <annotations>
            <features value="End to End scenarios"/>
            <stories value="B2C - Admin"/>
            <group value="e2e"/>
            <title value="Pass End to End B2C Admin scenario"/>
            <description value="Admin creates products, creates and manages categories, creates promotions, creates an order, processes an order, processes a return, uses admin grids"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-87014"/>
        </annotations>
        <before>
            <!--Login to Admin Area-->
            <actionGroup ref="LoginActionGroup" stepKey="loginToAdminArea"/>
        </before>
        <after>
            <amOnPage url="admin/admin/auth/logout/" stepKey="amOnLogoutPage"/>
        </after>

        <!--Admin creates product-->
        <!--Create Simple Product-->
        <amOnPage url="{{AdminProductIndexPage}}" stepKey="visitAdminProductPageSimple"/>
        <waitForPageLoad stepKey="waitForProductPageLoadSimple"/>
        <actionGroup ref="resetProductGridToDefaultView" stepKey="resetProductGridColumnsInitial"/>
        <actionGroup ref="goToCreateProductPage" stepKey="goToCreateSimpleProduct">
                <argument name="product" value="SimpleProduct"/>
        </actionGroup>
        <actionGroup ref="checkRequiredFieldsInProductForm" stepKey="checkRequiredFieldsProductSimple"/>
        <actionGroup ref="fillMainProductForm" stepKey="fillSimpleProductMain">
            <argument name="product" value="SimpleProduct"/>
        </actionGroup>
        <actionGroup ref="addProductImage" stepKey="addImageForProductSimple">
            <argument name="image" value="ImageUpload"/>
        </actionGroup>
        <actionGroup ref="saveProductForm" stepKey="saveSimpleProduct"/>
        <click selector="{{AdminProductFormActionSection.backButton}}" stepKey="clickBackToGridSimple"/>
        <actionGroup ref="filterProductGridBySku" stepKey="filterProductGridSimple">
            <argument name="product" value="SimpleProduct"/>
        </actionGroup>
        <grabAttributeFrom selector="{{AdminProductGridSection.productThumbnail('1')}}" userInput="src" stepKey="getSimpleProductThumbnail"/>
        <assertNotRegExp expected="'/placeholder\/thumbnail\.jpg/'" actual="$getSimpleProductThumbnail" stepKey="simpleThumbnailIsNotDefault"/>
        <actionGroup ref="viewProductInAdminGrid" stepKey="seeSimpleProductInGrid">
            <argument name="product" value="SimpleProduct"/>
        </actionGroup>

        <!--Create Virtual Product-->
        <amOnPage url="{{AdminProductIndexPage}}" stepKey="visitAdminProductPageVirtual"/>
        <waitForPageLoad stepKey="waitForProductPageLoadVirtual"/>
        <actionGroup ref="goToCreateProductPage" stepKey="goToCreateVirtualProduct">
            <argument name="product" value="VirtualProduct"/>
        </actionGroup>
        <fillField selector="{{AdminProductFormSection.productSku}}" userInput="{{VirtualProduct.sku}}" stepKey="fillVirtualName"/>
        <fillField selector="{{AdminProductFormSection.productName}}" userInput="{{VirtualProduct.name}}" stepKey="fillVirtualSku"/>
        <fillField selector="{{AdminProductFormSection.productPrice}}" userInput="{{VirtualProduct.price}}" stepKey="fillVirtualPrice"/>
        <fillField selector="{{AdminProductFormSection.productQuantity}}" userInput="{{VirtualProduct.quantity}}" stepKey="fillVirtualQty"/>
        <actionGroup ref="saveProductForm" stepKey="saveVirtualProduct"/>
        <actionGroup ref="viewProductInAdminGrid" stepKey="viewVirtualProductInGrid">
            <argument name="product" value="VirtualProduct"/>
        </actionGroup>

        <!--Admin creates category-->
        <comment userInput="Admin creates category." stepKey="adminCreatesCategoryComment" before="navigateToCategoryPage"/>
        <amOnPage url="{{AdminCategoryPage}}" stepKey="navigateToCategoryPage"/>
        <waitForPageLoad stepKey="waitForCategoryPageLoad"/>
        <!--Create category under Default Category-->
        <click selector="{{AdminCategorySidebarTreeSection.categoryTreeRoot}}" stepKey="clickDefaultCategory"/>
        <actionGroup ref="CheckCategoryNameIsRequiredField" stepKey="checkCategoryNameIsRequired"/>
        <actionGroup ref="CreateCategory" stepKey="createCategory">
            <argument name="categoryEntity" value="_defaultCategory"/>
        </actionGroup>
        <!--Create category under newly created category-->
        <click selector="{{AdminCategorySidebarTreeSection.categoryInTree(_defaultCategory.name)}}" stepKey="clickCreatedCategoryInTree"/>
        <actionGroup ref="CreateCategory" stepKey="createSubCategory">
            <argument name="categoryEntity" value="SimpleSubCategory"/>
        </actionGroup>

        <!--Admin moves category-->
        <comment userInput="Admin moves category." stepKey="adminMovesCategoryComment" before="onCategoryPageToMoveCategory"/>
        <amOnPage url="{{AdminCategoryPage}}" stepKey="onCategoryPageToMoveCategory"/>
        <waitForPageLoad stepKey="waitForPageLoadMoveCategory"/>
        <click selector="{{AdminCategorySidebarTreeSection.expandAll}}" stepKey="expandTree"/>
        <dragAndDrop selector1="{{AdminCategorySidebarTreeSection.categoryInTree(SimpleSubCategory.name)}}"
                     selector2="{{AdminCategorySidebarTreeSection.categoryTreeRoot}}"
                     stepKey="dragAndDropCategory"/>
        <waitForPageLoad stepKey="waitForMoveConfirmation"/>
        <see selector="{{AdminCategoryModalSection.title}}" userInput="Warning Message" stepKey="seeMoveConfirmationModal"/>
        <click selector="{{AdminCategoryModalSection.ok}}" stepKey="clickOkConfirmMove"/>
        <waitForPageLoad stepKey="waitForMove"/>
        <see selector="{{AdminCategoryMessagesSection.SuccessMessage}}" userInput="You moved the category." stepKey="seeCategoryMoveSuccessMessage"/>
        <seeElement selector="{{AdminCategorySidebarTreeSection.categoryInTreeUnderRoot(SimpleSubCategory.name)}}" stepKey="seeSubcategoryIsUnderDefault"/>

        <!--Clean up categories-->
        <!--TODO - Move to 'after' block when MQE-732 is fixed-->
        <actionGroup ref="DeleteCategory" stepKey="deleteDefaultCategory">
            <argument name="categoryEntity" value="_defaultCategory"/>
        </actionGroup>

        <!--Clean up products-->
        <!--TODO - Move to 'after' block when MQE-732 is fixed-->
        <actionGroup ref="deleteProductUsingProductGrid" stepKey="deleteSimpleProduct">
            <argument name="product" value="SimpleProduct"/>
        </actionGroup>
        <actionGroup ref="deleteProductUsingProductGrid" stepKey="deleteVirtualProduct">
            <argument name="product" value="VirtualProduct"/>
        </actionGroup>
    </test>
</tests>