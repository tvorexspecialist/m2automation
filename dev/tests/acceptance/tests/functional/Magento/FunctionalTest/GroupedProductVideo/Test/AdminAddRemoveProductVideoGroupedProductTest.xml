<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="AdminAddRemoveProductVideoGroupedProductTest">
        <annotations>
            <features value="Grouped Product with Product Video"/>
            <stories value="Add/Remove Product Video for Grouped Product"/>
            <title value="You should be able to add/remove product video for a Grouped Product."/>
            <description value="You should be able to add/remove product video for a Grouped Product."/>
            <severity value="MAJOR"/>
            <testCaseId value="MAGETWO-89552"/>
            <group value="grouped product"/>
            <group value="product video"/>
        </annotations>
        <before>
            <!-- Set product video Youtube api key configuration -->
            <createData entity="ProductVideoYoutubeApiKeyConfig" stepKey="setStoreConfig"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct1"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct2"/>
        </before>
        <after>
            <amOnPage url="{{AdminLogoutPage.url}}" stepKey="amOnLogoutPage"/>
            <createData entity="DefaultProductVideoConfig" stepKey="setStoreDefaultConfig"/>
            <deleteData createDataKey="simpleProduct1" stepKey="deleteSimpleProduct1"/>
            <deleteData createDataKey="simpleProduct2" stepKey="deleteSimpleProduct2"/>
        </after>

        <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>

        <!-- Create a grouped product -->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="visitAdminProductPageGrouped"/>
        <waitForPageLoad stepKey="waitForProductPageLoadGrouped"/>
        <actionGroup ref="goToCreateProductPage" stepKey="goToCreateGroupedProduct">
            <argument name="product" value="GroupedProduct"/>
        </actionGroup>
        <actionGroup ref="fillProductNameAndSkuInProductForm" stepKey="fillGroupedProductForm">
            <argument name="product" value="GroupedProduct"/>
        </actionGroup>

        <!-- Add two simple products to grouped product -->
        <scrollTo selector="{{AdminProductFormGroupedProductsSection.toggleGroupedProduct}}" x="0" y="-100" stepKey="scrollToGroupedSection"/>
        <conditionalClick selector="{{AdminProductFormGroupedProductsSection.toggleGroupedProduct}}" dependentSelector="{{AdminProductFormGroupedProductsSection.addProductsToGroup}}" visible="false" stepKey="openGroupedProductsSection"/>
        <click selector="body" stepKey="clickBodyToCorrectFocusGrouped"/>
        <click selector="{{AdminProductFormGroupedProductsSection.addProductsToGroup}}" stepKey="clickAddProductsToGroup"/>
        <waitForElementVisible selector="{{AdminAddProductsToGroupPanel.filters}}" stepKey="waitForGroupedProductModal"/>
        <actionGroup ref="filterProductGridBySku" stepKey="filterGroupedProductOptions1">
            <argument name="product" value="$$simpleProduct1$$"/>
        </actionGroup>
        <checkOption selector="{{AdminAddProductsToGroupPanel.firstCheckbox}}" stepKey="checkFilterResult1"/>
        <actionGroup ref="filterProductGridBySku" stepKey="filterGroupedProductOptions2">
            <argument name="product" value="$$simpleProduct2$$"/>
        </actionGroup>
        <checkOption selector="{{AdminAddProductsToGroupPanel.firstCheckbox}}" stepKey="checkFilterResult2"/>
        <click selector="{{AdminAddProductsToGroupPanel.addSelectedProducts}}" stepKey="clickAddSelectedGroupProducts"/>

        <!-- Add product video -->
        <actionGroup ref="addProductVideo" stepKey="addProductVideo"/>

        <!--Save product-->
        <actionGroup ref="saveProductForm" stepKey="saveGroupedProduct"/>

        <!-- Assert product video in admin product form -->
        <actionGroup ref="assertProductVideoAdminProductPage" stepKey="assertProductVideoAdminProductPage"/>

        <!-- Assert product in storefront product page -->
        <actionGroup ref="AssertProductNameAndSkuInStorefrontProductPage" stepKey="AssertProductInStorefrontProductPage">
            <argument name="product" value="GroupedProduct"/>
        </actionGroup>

        <!-- Assert product video in storefront product page -->
        <actionGroup ref="assertProductVideoStorefrontProductPage" stepKey="assertProductVideoStorefrontProductPage"/>

        <!-- Remove product video from grouped product -->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="adminProductIndexPageRemove"/>
        <waitForPageLoad stepKey="waitForProductIndexPageLoad2"/>
        <actionGroup ref="filterProductGridBySku" stepKey="filterProductGridBySku">
            <argument name="product" value="GroupedProduct"/>
        </actionGroup>
        <actionGroup ref="openProducForEditByClickingRowXColumnYInProductGrid" stepKey="openProducForEditByClickingRow1Column2InProductGrid"/>
        <actionGroup ref="removeProductVideo" stepKey="removeProductVideo"/>
        <actionGroup ref="saveProductForm" stepKey="saveProductFormAfterRemove"/>

        <!-- Assert product video not in admin product form -->
        <actionGroup ref="assertProductVideoNotInAdminProductPage" stepKey="assertProductVideoNotInAdminProductPage"/>

        <!-- Assert product in storefront product page -->
        <actionGroup ref="AssertProductNameAndSkuInStorefrontProductPage" stepKey="AssertProductInStorefrontProductPageAfterRemove">
            <argument name="product" value="GroupedProduct"/>
        </actionGroup>

        <!-- Assert product video not in storefront product page -->
        <actionGroup ref="assertProductVideoNotInStorefrontProductPage" stepKey="assertProductVideoNotInStorefrontProductPage"/>
    </test>
</tests>
